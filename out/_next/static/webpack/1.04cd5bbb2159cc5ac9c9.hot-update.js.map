{"version":3,"file":"static/webpack/1.04cd5bbb2159cc5ac9c9.hot-update.js","sources":["webpack:///./components/pages/contact/form/form-content.tsx"],"sourcesContent":["import useForm from 'react-hook-form'\r\n// import axios from 'axios'\r\n\r\nconst FormContent: React.FunctionComponent = () => {    \r\n    const { register, handleSubmit, watch, errors } = useForm()\r\n    // @ts-ignore\r\n    const onSubmit = data => { \r\n        console.log('dataform', data)\r\n        // axios.post('http://ingenia.com/snippets/test/contact.php', data)\r\n    }\r\n    console.log(watch('example')) \r\n    return (\r\n        <>\r\n            <div className=\"form-content\">\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"fiels-wrapper\">\r\n                        <div className=\"form-steps-wrapper\">\r\n                            <div className=\"form-steps\"><span>1</span></div>\r\n                            <div className=\"form-input-wrapper\">\r\n                                <input name=\"name\"  ref={register({ required: true, minLength: 5, pattern: /^[A-Za-z]+$/i })} className=\"forms-input-text\" type=\"text\" placeholder=\"Name\" autoComplete=\"off\"/>\r\n                                {errors.name && errors.name.type === 'required' && (<span>This field is required</span>)}\r\n                                {errors.name && errors.name.type === 'minLength' && (<span>This field require min 5 characters</span>)}\r\n                                {errors.name && errors.name.type === 'pattern' && (<span>Please insert only letters</span>)}\r\n                            </div>\r\n                            <div className=\"form-input-wrapper\">\r\n                                <input name=\"lastname\"  ref={register({ required: true, minLength: 5, pattern: /^[A-Za-z]+$/i })} className=\"forms-input-text\" type=\"text\" placeholder=\"Last Name\" autoComplete=\"off\"/>\r\n                                {errors.lastname && errors.lastname.type === 'required' && (<span>This field is required</span>)}\r\n                                {errors.lastname && errors.lastname.type === 'minLength' && (<span>This field require min 5 characters</span>)}\r\n                                {errors.lastname && errors.lastname.type === 'pattern' && (<span>Please insert only letters</span>)}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-steps-wrapper\">\r\n                            <div className=\"form-steps\"><span>2</span></div>\r\n                            <div className=\"form-input-wrapper\">\r\n                                <input name=\"email\"  ref={register({ required: true, pattern: /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)*@[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)*[.][a-zA-Z]{2,5}/i })} className=\"forms-input-text\" type=\"text\" placeholder=\"E-mail\" autoComplete=\"off\"/>\r\n                                {errors.email && errors.email.type === 'required' && (<span>This field is required</span>)}\r\n                                {errors.email && errors.email.type === 'minLength' && (<span>This field require min 5 characters</span>)}\r\n                                {errors.email && errors.email.type === 'pattern' && (<span>Please insert an email valited</span>)}\r\n                            </div>\r\n                            <div className=\"form-input-wrapper\">\r\n                                <input name=\"phone\" ref={register({ required: true, pattern: /^[0-9]{10}/i })} className=\"forms-input-text\" type=\"text\" placeholder=\"Phone\" autoComplete=\"off\"/>\r\n                                {errors.phone && errors.phone.type === 'required' && (<span>This field is required</span>)}\r\n                                {errors.phone && errors.phone.type === 'minLength' && (<span>This field require min 5 characters</span>)}\r\n                                {errors.phone && errors.phone.type === 'pattern' && (<span>Please insert a phone validated</span>)}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"tellus-wrapper\">\r\n                            <div className=\"form-steps-wrapper\">\r\n                                <div className=\"form-steps\"><span>3</span></div>\r\n                                <p>Tell us about your challenge or opportunity</p>\r\n                            </div>\r\n                            <textarea \r\n                                ref={register({ required: true, minLength: 5 })}\r\n                                name=\"comment\"\r\n                                wrap=\"hard\"\r\n                                autoComplete=\"off\"\r\n                                >\r\n                            </textarea>\r\n                            {errors.comment && errors.comment.type === 'required' && (<span>This field is required</span>)}\r\n                            {errors.comment && errors.comment.type === 'minLength' && (<span>Please tell us more about your idea</span>)}\r\n\r\n                            {/* <div className=\"form-steps-wrapper\">\r\n                                <div className=\"form-steps\"><span>4</span></div>\r\n                                <p>Captcha</p>\r\n                                <input className=\"forms-input-text\" type=\"text\" />\r\n                            </div> */}\r\n                            <div className=\"tellus-button-wrapper\">\r\n                                <button className=\"form-button\" type=\"submit\"><span>SEND</span></button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FormContent\r\n"],"mappingssourceRoot":""}